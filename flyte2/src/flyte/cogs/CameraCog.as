package flyte.cogs{	import flash.geom.Rectangle;		import flyte.core.Base;	import flyte.core.flWorld;	import flyte.events.GameEvent;

	public class CameraCog extends BaseCog	{		public static var CAMERA_OFFSET_X:Number=400;		public static var CAMERA_OFFSET_Y:Number=300;		private var world:flyte.core.flWorld		public var easeX:Number = 0.2		public var easeY:Number = 0.2		public var trackX:Boolean = true		public var trackY:Boolean = true		public var distance:Number=1		public var active:Boolean		public var restriction:Rectangle		public function CameraCog(t:flyte.core.flWorld)		{			restriction = new Rectangle()			this.world = t			t.event.onLoopDo(updateCamera)		}				public function setTarget(t:Base):void		{			_target = t			active = true		}				private function updateCamera(e:GameEvent):void		{			if(!active) return			var targetX:Number			var targetY:Number			if(!(restriction.width == 0 || restriction.height == 0))			{				targetX = Math.min(restriction.right,Math.max(_target.x,restriction.left))				targetY = Math.min(restriction.bottom,Math.max(_target.y,restriction.top))			}else{				targetX = _target.x				targetY = _target.y			}			if(trackX) world.x-=((targetX+(world.x/distance)-(CAMERA_OFFSET_X/distance))*easeX)			if(trackY) world.y-=((targetY+(world.y/distance)-(CAMERA_OFFSET_Y/distance))*easeY)			world.scaleX=world.scaleY=distance					}						}}