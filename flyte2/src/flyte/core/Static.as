package flyte.core{	import flash.geom.Rectangle;	import flash.system.System;	import flyte.events.GameEvent;		public class Static extends Base	{		public var frictionCoef:Number = 1		public var wall:Boolean = false		public var floor:Boolean = false		public var ceiling:Boolean = false		public var stairMode:Boolean = false		public var onlyDisplaceHero:Boolean = false		public function Static()		{			this.sensors.platformMode = true		}				public function collidesWith(b:Base):Boolean		{			return this.hitTestObject(b)		}				public function displace(t:Body):Vector.<Boolean>		{				var v:Vector.<Boolean>						if(this.onlyDisplaceHero && t != t.world.hero)			{				v = new Vector.<Boolean>();				v[0] = false				v[1] = false				v[2] = false				v[3] = false				return v			}						var obj:Object = {left:false,right:false,top:false,bottom:false}							var testRight:Rectangle = this.sensors.left().intersection(t.sensors.right())			var testLeft:Rectangle = this.sensors.right().intersection(t.sensors.left())						if(!floor)			{				if(testRight.width > 0 && testRight.height > t.gravity.velocityY )				{					obj.right = true					t.x -= testRight.width				}else{					obj.right = false				}												if(testLeft.width > 0)				{					obj.left = true					t.x += testLeft.width				}else{					obj.left = false				}			}			var testBottom:Rectangle = this.sensors.top().intersection(t.sensors.bottom())						if(!wall){				if(testBottom.height > 0 && (!stairMode || (t.gravity.falling || t.collision.onStairs)))				{					obj.bottom = true					t.y -= (testBottom.height - 1)					t.rotation = 0				}else{					obj.bottom = false				}			}						var testTop:Rectangle = this.sensors.bottom().intersection(t.sensors.top())									if(!floor || ceiling) {				if(testTop.height > 0 && t.jumping)				{					obj.top = true					t.y += testTop.height * 2					t.gravity.reboundTop(1)				}			}					v = new Vector.<Boolean>();			v[0] = obj.right			v[1] = obj.left			v[2] = obj.top			v[3] = obj.bottom			return v		}					}}